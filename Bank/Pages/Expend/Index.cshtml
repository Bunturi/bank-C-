@page
@model Bank.Pages.Expend.IndexModel
@{
    ViewData["Title"] = "Expend List";
}

<h3>@ViewData["Title"]</h3>
<hr />

<!-- search -->
<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text"
               name="SearchTerm"
               value="@Model.SearchTerm"
               class="form-control"
               placeholder="Search description (min 3 letters)"
               aria-label="Search" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<!-- Back to List btn -->
@if (!string.IsNullOrEmpty(Model.SearchTerm) && Model.SearchTerm.Length >= 3)
{
    <form method="get">
        <button type="submit" class="btn btn-secondary mb-3">Back to List</button>
    </form>
}
<!-- create btn -->
<p>
    <a asp-page="Create" class="btn btn-primary">Create</a>
</p>

<!-- table header -->
<table class="table table-success table-striped table-responsive table-hover">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(m => m.Expend[0].TransactionDate)</th>
            <th>@Html.DisplayNameFor(m => m.Expend[0].Transaction)</th>
            <th>@Html.DisplayNameFor(m => m.Expend[0].TransactionCategory)</th>
            <th>@Html.DisplayNameFor(m => m.Expend[0].Description)</th>
            <th>@Html.DisplayNameFor(m => m.Expend[0].Amount)</th>
            <th>Action</th>
        </tr>
    </thead>
    <!-- table body -->
    <tbody>
        @if (Model?.Expend != null && Model.Expend.Any())
        {
            foreach (var expends in Model.Expend)
            {
                <tr>
                    <td>@Html.DisplayFor(item => expends.TransactionDate)</td>
                    <td>@Html.DisplayFor(item => expends.Transaction)</td>
                    <td>@Html.DisplayFor(item => expends.TransactionCategory)</td>
                    <td>@Html.DisplayFor(item => expends.Description)</td>
                    <td>@Html.DisplayFor(item => expends.Amount)</td>
                    <td>
                        <a asp-page="./Edit" asp-route-itemid="@expends.Id" class="btn btn-primary">Edit</a>
                        <a asp-page="./Delete" asp-route-itemid="@expends.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">
                    No matching results found.
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-CurrentPage="@(Model.CurrentPage - 1)" asp-route-SearchTerm="@Model.SearchTerm">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-route-CurrentPage="@i" asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-route-CurrentPage="@(Model.CurrentPage + 1)" asp-route-SearchTerm="@Model.SearchTerm">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
}
